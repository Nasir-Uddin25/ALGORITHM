The Bellman-Ford Algorithm is a graph traversal algorithm used to find the shortest paths from a single source vertex to all other vertices in a weighted graph. Unlike Dijkstra's algorithm, the Bellman-Ford algorithm can handle graphs with negative edge weights, as long as there are no negative weight cycles reachable from the source vertex.

Key Features:
Works for graphs with negative edge weights: It can handle graphs where some edges have negative weights, as long as there are no negative weight cycles.

Detects negative weight cycles: If a negative weight cycle is reachable from the source vertex, the algorithm can detect it.

Single-source shortest path: It computes the shortest paths from a single source vertex to all other vertices in the graph.

Algorithm Steps:
Initialization:

Set the distance to the source vertex as 0.

Set the distance to all other vertices as ∞ (infinity).

Relaxation:
For each edge (u, v) with weight w, update the distance to vertex v if a shorter path is found:
if distance[u] + w < distance[v], 
then update distance[v]=distance[u]+w
if distance[u]+w<distance[v], then update distance[v]=distance[u]+w
Repeat this relaxation step for all edges, and perform this process V−1 timeswhere 
V is the number of vertices in the graph.

Negative Cycle Detection:
After V−1 iterations, perform one additional relaxation step. If any distance is updated during this step, it indicates the presence of a negative weight cycle reachable from the source vertex.